import os
from logs import error
def writeCFile(width,height,filePath,bytesarray,fileName,ext,ppb=8):
    _str_data = ""
    col = 0
    end = int(width/ppb)
    start = 0
    offset = int(width/ppb)
    for i in range(len(bytesarray)):
        col+=1
        if col % (width/ppb) == 0:
            _str_data = _str_data + bytesarray[i] + ", " +  "\t/* ["
            row = bytesarray[start:end]
            for byte in row: 
                _int = int(byte,16)
                _bin = "{0:08b}".format(_int)
                for pix in str(_bin):
                    if int(pix) == 1:
                        _str_data += "*"
                    elif int(pix) == 0:
                        _str_data += " "
            start = end
            end = end + offset
            _str_data += "] */" + "\n\t"
        else:
            _str_data += bytesarray[i] + ", "
            
    charCodeName,img_buffer = f'img_{fileName}_{ext}_char_table',_str_data
    header = f'''/*******************************************************************************
     *                                                                             *
     *          This image definition file is generated by                         *
     *              Sandeep - sand.kumar.gr@gmail.com                              *
     *                                                                             *
     * Make sure it is legal to use images on your PC for this conversion          *
     *                                                                             *
     * Image definition for file {os.path.basename(filePath)}
     *******************************************************************************/
    \n'''
    struct = '''
    typedef struct IMG_DEF {
        unsigned char width_in_pixels;     /* Image width */
        unsigned char height_in_pixels;    /* Image height*/
        unsigned char *char_table;         /* Image table start address in memory  */
    } IMG_DEF;
    \n'''

    body ='''unsigned char code %s[] = {
    %s
    };
    \n\n\n'''%(charCodeName,img_buffer)

    struct2 = '''struct IMG_DEF code %s = { %d, %d, %s };'''%(f"img_{fileName}_{ext}",width,height,charCodeName)
    try:
        if not os.path.exists("./embeddedLogos"):
            os.makedirs("./embeddedLogos",exist_ok=True)        
        with open(f"./embeddedLogos/{fileName}.{ext}.c",'wb') as f:
            f.write(bytes(header,'utf-8'))
            f.write(bytes(struct,"utf-8"))
            f.write(bytes(body,"utf-8"))
            f.write(bytes(struct2,"utf-8"))
    except Exception as e:
        error.exception(e)

if __name__=="__main__":
    pass